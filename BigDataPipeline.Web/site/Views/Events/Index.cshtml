@{
    Layout = Url.Content("Shared/_Layout.cshtml");
}


<div ng-app="app" ng-controller="mainController" id="mainController" ui-i18n="en">
    <h3>Events</h3>

    <div class="separator-8"></div>

    <div class="row" id="nav-mainTable">
        <div class="col-sm-4">
            <button class="btn btn-default margin-right-16" role="button" ng-click="refresh()">Refresh</button>
        </div>

        <div class="col-sm-8">
            <input class="form-control" id="main-table-filter" type="text" placeholder="search" />
        </div>
    </div>

    <div class="separator-8"></div>


    <div class="table-responsive">
        <table class="table table-condensed table-bordered table-striped table-hover" id="main-table" data-filter="#main-table-filter" data-filter-text-only="true" data-page-size="25" data-page-navigation="#main-table-pagination">
            <thead>
                <tr>
                    <th class="text-center">Date</th>
                    <th class="text-center">Job Id</th>
                    <th class="text-center">Job</th>
                    <th class="text-center">Module</th>
                    <th class="text-center">Level</th>
                    <th class="text-center">Message</th>
                </tr>
            </thead>
            <tbody></tbody>
            <tfoot>
                <tr>
                    <td colspan="6">
                        <div class="container-fluid">
                            <div class="row">
                                <div class="col-sm-7 col-md-10">
                                    <div class="hide-if-no-paging">
                                        <div id="main-table-pagination" class="pagination"></div>
                                    </div>
                                </div>
                                <div class="col-sm-5 col-md-2"><div class="pull-right"><div class="label label-default">Total: {{ list.length }}</div></div></div>
                            </div>
                        </div>
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>
    

</div>


@section scripts {

    <script type="text/javascript">
        function cropLongText(text, maxLength, removeHtml) {
            text = text || "";
            if (removeHtml) {
                // create a html node and use browser methods to get the text
                var dummyNode = document.createElement('div');
                dummyNode.innerHTML = text.replace(/>/g, '> ');
                text = dummyNode.innerText || dummyNode.textContent;
            }
            if (!maxLength || maxLength < 40) { maxLength = 40; }
            var looseMax = Math.ceil(maxLength * 0.1);
            if (looseMax < 10) { looseMax = 10; }

            if (text.length <= maxLength)
                return text;
            var textReduced = text.substring(0, maxLength - 10);

            text = text.substring(maxLength - 10);
            var ix = text.indexOf(" ");
            if (ix < 0) { ix = 10; }
            else if (ix > looseMax) { ix = 10; }
            text = text.substring(0, ix);

            return textReduced + text + " ...";
        }

        function makeLongTextBreakable(text, breakAll) {            
            return '<span class="word-break-{0}">'.replace('{0}', (breakAll ? 'all' : 'word')) + text + '</span>';
        }

        //** angularJs initialization **
        var ng_app = angular.module('app', []);
        ng_app.directive('ngSelect2Bind', ['$q', '$timeout', ngSelect2BindDirective]);

        //** angularJs page main controller **
        ng_app.controller('mainController', function ($scope, $http, $timeout, $compile, $q) {
            //** properties declaration **
            $scope.list = [];
            
            //**
            //** methods and behaviors **
            $scope.executeQuery = function (url, operation, data, onsuccess, onerror) {
                var p = {
                    op: operation,
                    data: data
                };
                simpleDialog.loading();
                return $.ajax({
                    url: url,
                    cache: false,
                    async: true,
                    type: 'POST',
                    dataType: "json",
                    data: angular.toJson(p),
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        if (data && data.status) {
                            simpleDialog.close();
                            if (typeof onsuccess == 'function') {
                                $timeout(function () {
                                    onsuccess(data.result);
                                });
                            }
                        } else {
                            if (data && data.message) {
                                simpleDialog.warning(data.message);
                            } else {
                                simpleDialog.error();
                            }
                            if (typeof onerror == 'function') {
                                $timeout(function () {
                                    onerror();
                                });
                            }
                        }
                    },
                    error: function () {
                        simpleDialog.error();
                        if (typeof onerror == 'function') {
                            $timeout(function () {
                                onerror();
                            });
                        }
                    }
                });
            };

            $scope.refresh = function () {
                simpleDialog.loading();

                $scope.executeQuery("./events/query", "load", {},
                    function (data) {
                        $scope.list = data;
                        var lastSelectedItem = $scope.selectedItem;
                        $scope.selectItem(null);

                        // diplay data (table population and row selection)
                        $('#main-table').data('simpleTable').populateTable($scope.list);

                        // fooTable initilization (sort and pagination)
                        if (!$('#main-table').data('footable')) {
                            $('#main-table').footable();
                        } else {
                            $('#main-table').data('footable').redraw();
                        }

                        // since we are using simpleTable and fooTable to handle table generation,
                        // we must tell angulaJs to recognize this new nodes...
                        // angularJs compile: tells angular to parse the newly created HTML nodes
                        $compile($('#main-table'))($scope);
                    });
            };

            $scope.selectItem = function (item) {
                if (item && item.Message) {
                    simpleDialog.info($scope.getSimpleEventDetails(item));
                }
            };

            $scope.getSimpleEventDetails = function (item) {
                var itemDetails = '<ul><li>Date: {0}</li><li>Job Id: {1}</li><li>Job Name: {2}</li><li>Module: {3}</li><li>Level: {4}</li><li>Message:</li></ul><div class="well word-break-word">{5}<br/>{6}</div>';
                return itemDetails.replace('{0}', item.Date).replace('{1}', item.JobId).replace('{2}', item.Job).replace('{3}', item.Module).replace('{4}', item.Level).replace('{5}', item.Message).replace('{6}', item.Exception || "");
            };

            //**
            //** Startup and UI components configuration **
            (function () {
                // simple dialog localization
                simpleDialog.defaultOptions.cancelButtonContent = 'Cancel';

                // table configuration
                $('#main-table').simpleTable({
                    customDataParser: function (i) {
                        return [
                            i.Date.replace('T', ' ').substring(0, 19),
                            makeLongTextBreakable(i.JobId, true),
                            makeLongTextBreakable(i.Job),
                            makeLongTextBreakable(i.Module),
                            i.Level,
                            makeLongTextBreakable(cropLongText(i.Message + (!!i.Exception ? (": " +  i.Exception) : ""), 200))
                        ];
                    },
                    onRowSelection: function (data, rowId) {
                        $timeout(function () {
                            $scope.selectItem(data);
                        });
                    }
                });

                $scope.selectItem(null);

                $scope.refresh();
            }());
            
        });


        // initialization
        //$(document).ready(function () {
        //    angular.element('#mainController').scope().refresh();            
        //});
    </script>
}